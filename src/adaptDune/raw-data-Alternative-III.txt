 --- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---



---- Adaptivity Analysis on Program : ifCD.br -----
Total Command Numbers: 5
computation of the DFG total time:0.000245s

Start of the program infered weight(3,1)(4,1)(1,1)(0,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.000516s

Start of the program infered weight(3,1)(4,1)(1,1)(0,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000158s
computation of the total parsing and graph generation time:0.000859s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 4.38690185546875e-05 seconds ---
The Adaptivity From This Graph is:  2
--- ADAPTIVITY ANALYSIS TIME: 0.0053331851959228516 seconds ---
Done: 61% (41/67, 26 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : ifVD.br -----
Total Command Numbers: 5
computation of the DFG total time:0.000149s

Start of the program infered weight(3,1)(4,1)(1,1)(0,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.000380s

Start of the program infered weight(3,1)(4,1)(1,1)(0,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000150s
computation of the total parsing and graph generation time:0.000648s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 4.76837158203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 9.894371032714844e-05 seconds ---
The Adaptivity From This Graph is:  2
--- ADAPTIVITY ANALYSIS TIME: 0.0054438114166259766 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : lRGD.br -----
Total Command Numbers: 9
computation of the DFG total time:0.000176s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(8,k)(1,1)(0,1)(7,k)(2,1)End of the program infered weight

computation of the DCDG total time:0.000503s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(8,k)(1,1)(0,1)(7,k)(2,1)End of the program infered weight
computation of the abscfg total time:0.000205s
computation of the total parsing and graph generation time:0.000836s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00014781951904296875 seconds ---
The Adaptivity From This Graph is:  max(1, min(min(k, k), k))
--- ADAPTIVITY ANALYSIS TIME: 0.005505084991455078 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : mROdd.br -----
Total Command Numbers: 8
computation of the DFG total time:0.000173s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,k)End of the program infered weight

computation of the DCDG total time:0.000436s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,k)End of the program infered weight
computation of the abscfg total time:0.000149s
computation of the total parsing and graph generation time:0.000705s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00010991096496582031 seconds ---
The Adaptivity From This Graph is:  max(max(max(2, 1 + max(1, (2) * (min(min(k, k), k))) + 1), 1 + max(1, (2) * (min(min(k, k), k)))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.005747079849243164 seconds ---
Done: 61% (41/67, 26 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : mRSingle.br -----
Total Command Numbers: 8
computation of the DFG total time:0.000170s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,k)End of the program infered weight

computation of the DCDG total time:0.000518s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,k)End of the program infered weight
computation of the abscfg total time:0.000153s
computation of the total parsing and graph generation time:0.000904s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 7.987022399902344e-05 seconds ---
The Adaptivity From This Graph is:  max(1 + max(1, min(min(k, k), k)), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.005630970001220703 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : multiInputs.br -----
Total Command Numbers: 20
computation of the DFG total time:0.000343s

infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
Start of the program infered weight(15,(k)*(N))(3,1)(16,k)(17,(k)*(N))(5,N)(10,k)(14,(k)*(N))(12,k)(11,k)(6,N)(18,(k)*(N))(4,N)(8,1)(1,1)(19,(k)*(N))(0,1)(7,N)(9,k)(13,(k)*(N))(2,1)End of the program infered weight

computation of the DCDG total time:0.002327s

infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
Start of the program infered weight(15,(k)*(N))(3,1)(16,k)(17,(k)*(N))(5,N)(10,k)(14,(k)*(N))(12,k)(11,k)(6,N)(18,(k)*(N))(4,N)(8,1)(1,1)(19,(k)*(N))(0,1)(7,N)(9,k)(13,(k)*(N))(2,1)End of the program infered weight
computation of the abscfg total time:0.000159s
computation of the total parsing and graph generation time:0.002695s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.814697265625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0004971027374267578 seconds ---
The Adaptivity From This Graph is:  max(max(max(1 + max((k)*(N) + 1, min((k)*(N), (k)*(N))), 1 + max((k)*(N) + 1, min((k)*(N), (k)*(N))) + max((k)*(N) + 1, min((k)*(N), (k)*(N)))), 1 + max((k)*(N) + 1, min((k)*(N), (k)*(N)))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.0067441463470458984 seconds ---
Done: 61% (41/67, 26 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : multiRounds.br -----
Total Command Numbers: 6
computation of the DFG total time:0.000263s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(4,k)(1,1)(0,1)(2,k)End of the program infered weight

computation of the DCDG total time:0.000699s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(4,k)(1,1)(0,1)(2,k)End of the program infered weight
computation of the abscfg total time:0.000127s
computation of the total parsing and graph generation time:0.001084s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 9.870529174804688e-05 seconds ---
The Adaptivity From This Graph is:  max(1, min(min(k, k), k))
--- ADAPTIVITY ANALYSIS TIME: 0.006585121154785156 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : nestWhileMPRV.br -----
Total Command Numbers: 12
computation of the DFG total time:0.000431s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(10,(k)*(k))(11,(k)*(k))(6,k)(4,k)(8,k)(1,1)(0,1)(7,k)(9,(k)*(k))(2,1)End of the program infered weight

computation of the DCDG total time:0.000844s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(10,(k)*(k))(11,(k)*(k))(6,k)(4,k)(8,k)(1,1)(0,1)(7,k)(9,(k)*(k))(2,1)End of the program infered weight
computation of the abscfg total time:0.000153s
computation of the total parsing and graph generation time:0.001209s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00015306472778320312 seconds ---
The Adaptivity From This Graph is:  max(max(max(1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k))), 1), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.00652313232421875 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : nestWhileMV.br -----
Total Command Numbers: 9
computation of the DFG total time:0.000214s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,(k)*(k))(6,(k)*(k))(4,k)(8,k)(1,1)(0,1)(7,(k)*(k))(2,k)End of the program infered weight

computation of the DCDG total time:0.000722s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,(k)*(k))(6,(k)*(k))(4,k)(8,k)(1,1)(0,1)(7,(k)*(k))(2,k)End of the program infered weight
computation of the abscfg total time:0.000195s
computation of the total parsing and graph generation time:0.001265s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 4.0531158447265625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00011491775512695312 seconds ---
The Adaptivity From This Graph is:  max(1 + max(1, (2) * (min(min((k)*(k), k), (k)*(k)))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.006051063537597656 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : nestWhileRC.br -----
Total Command Numbers: 12
computation of the DFG total time:0.000263s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(10,k)(11,k)(6,k)(4,k)(8,(k)*(k+1))(1,1)(0,1)(7,(k)*(k+1))(9,(k)*(k+1))(2,1)End of the program infered weight

computation of the DCDG total time:0.000682s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(10,k)(11,k)(6,k)(4,k)(8,(k)*(k+1))(1,1)(0,1)(7,(k)*(k+1))(9,(k)*(k+1))(2,1)End of the program infered weight
computation of the abscfg total time:0.000182s
computation of the total parsing and graph generation time:0.001008s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00012493133544921875 seconds ---
The Adaptivity From This Graph is:  max(1 + max((k)*(k+1) + max(1, (2) * (min(min((k)*(k+1), k), (k)*(k+1)))), min((k)*(k+1), (k)*(k+1))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.005749225616455078 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : nestWhileRV.br -----
Total Command Numbers: 10
computation of the DFG total time:0.000187s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(8,(k)*(k))(1,1)(0,1)(7,(k)*(k))(9,(k)*(k))(2,1)End of the program infered weight

computation of the DCDG total time:0.000629s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(8,(k)*(k))(1,1)(0,1)(7,(k)*(k))(9,(k)*(k))(2,1)End of the program infered weight
computation of the abscfg total time:0.000151s
computation of the total parsing and graph generation time:0.000917s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0004909038543701172 seconds ---
The Adaptivity From This Graph is:  max(max(max(1 + max(k + max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k))), 1), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.006676912307739258 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : nestWhileVD.br -----
Total Command Numbers: 9
computation of the DFG total time:0.000229s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,(k)*(k))(4,k)(8,(k)*(k))(1,1)(0,1)(7,(k)*(k))(2,k)End of the program infered weight

computation of the DCDG total time:0.000553s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,(k)*(k))(4,k)(8,(k)*(k))(1,1)(0,1)(7,(k)*(k))(2,k)End of the program infered weight
computation of the abscfg total time:0.000166s
computation of the total parsing and graph generation time:0.000840s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0005629062652587891 seconds ---
The Adaptivity From This Graph is:  max(max(max(2, 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k))) + 1), 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.0063629150390625 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : seq.br -----
Total Command Numbers: 4
computation of the DFG total time:0.000290s

Start of the program infered weight(3,1)(1,1)(0,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.000529s

Start of the program infered weight(3,1)(1,1)(0,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000107s
computation of the total parsing and graph generation time:0.000737s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 6.914138793945312e-05 seconds ---
The Adaptivity From This Graph is:  4
--- ADAPTIVITY ANALYSIS TIME: 0.006161212921142578 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : seqRV.br -----
Total Command Numbers: 4
computation of the DFG total time:0.000144s

Start of the program infered weight(3,1)(1,1)(0,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.000375s

Start of the program infered weight(3,1)(1,1)(0,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000186s
computation of the total parsing and graph generation time:0.000678s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.1219253540039062e-05 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00014901161193847656 seconds ---
The Adaptivity From This Graph is:  3
--- ADAPTIVITY ANALYSIS TIME: 0.0057981014251708984 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : twoRounds.br -----
Total Command Numbers: 7
computation of the DFG total time:0.000252s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,1)(4,k)(1,1)(0,1)(2,k)End of the program infered weight

computation of the DCDG total time:0.000613s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,1)(4,k)(1,1)(0,1)(2,k)End of the program infered weight
computation of the abscfg total time:0.000162s
computation of the total parsing and graph generation time:0.000927s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 9.083747863769531e-05 seconds ---
The Adaptivity From This Graph is:  2
--- ADAPTIVITY ANALYSIS TIME: 0.005754947662353516 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : while.br -----
Total Command Numbers: 6
computation of the DFG total time:0.000161s

infer weight handle while, i:i, initia_gap:k, variance:2
Start of the program infered weight(3,(k)/(2))(5,(k)/(2))(4,(k)/(2))(1,1)(0,1)(2,(k)/(2))End of the program infered weight

computation of the DCDG total time:0.000432s

infer weight handle while, i:i, initia_gap:k, variance:2
Start of the program infered weight(3,(k)/(2))(5,(k)/(2))(4,(k)/(2))(1,1)(0,1)(2,(k)/(2))End of the program infered weight
computation of the abscfg total time:0.000220s
computation of the total parsing and graph generation time:0.000817s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.1457672119140625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 8.296966552734375e-05 seconds ---
The Adaptivity From This Graph is:  max(1 + max(1, min(min((k)/(2), (k)/(2)), (k)/(2))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.00567317008972168 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : whileM.br -----
Total Command Numbers: 8
computation of the DFG total time:0.000173s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,k)End of the program infered weight

computation of the DCDG total time:0.000417s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,k)End of the program infered weight
computation of the abscfg total time:0.000134s
computation of the total parsing and graph generation time:0.000662s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00014901161193847656 seconds ---
The Adaptivity From This Graph is:  max(max(max(2, 1 + max(1, (2) * (min(min(k, k), k))) + 1), 1 + max(1, (2) * (min(min(k, k), k)))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.00599217414855957 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : whileMP2.br -----
Total Command Numbers: 9
computation of the DFG total time:0.000183s

infer weight handle while, i:j, initia_gap:k+100, variance:1
Start of the program infered weight(3,k+100)(5,k+100)(6,k+100)(4,k+100)(8,k+100)(1,1)(0,1)(7,k+100)(2,1)End of the program infered weight

computation of the DCDG total time:0.000461s

infer weight handle while, i:j, initia_gap:k+100, variance:1
Start of the program infered weight(3,k+100)(5,k+100)(6,k+100)(4,k+100)(8,k+100)(1,1)(0,1)(7,k+100)(2,1)End of the program infered weight
computation of the abscfg total time:0.000221s
computation of the total parsing and graph generation time:0.000804s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 9.107589721679688e-05 seconds ---
The Adaptivity From This Graph is:  max(1 + max(1, (2) * (min(min(k+100, k+100), k+100))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.00621795654296875 seconds ---
Done: 61% (41/67, 26 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : whileMP3.br -----
Total Command Numbers: 9
computation of the DFG total time:0.000189s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(8,k)(1,1)(0,1)(7,k)(2,1)End of the program infered weight

computation of the DCDG total time:0.000652s

infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(8,k)(1,1)(0,1)(7,k)(2,1)End of the program infered weight
computation of the abscfg total time:0.000160s
computation of the total parsing and graph generation time:0.000983s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00010323524475097656 seconds ---
The Adaptivity From This Graph is:  max(1 + max(k + 1, min(k, k)), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.005856037139892578 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : whileMPVCD.br -----
Total Command Numbers: 8
computation of the DFG total time:0.000227s

infer weight handle while, i:x, initia_gap:*, variance:1
Start of the program infered weight(3,*)(5,*)(6,*)(4,*)(1,1)(0,1)(7,1)(2,*)End of the program infered weight

computation of the DCDG total time:0.000499s

infer weight handle while, i:x, initia_gap:*, variance:1
Start of the program infered weight(3,*)(5,*)(6,*)(4,*)(1,1)(0,1)(7,1)(2,*)End of the program infered weight
computation of the abscfg total time:0.000151s
computation of the total parsing and graph generation time:0.000790s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 4.0531158447265625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 7.677078247070312e-05 seconds ---
The Adaptivity From This Graph is:  2
--- ADAPTIVITY ANALYSIS TIME: 0.005924701690673828 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : whileRV.br -----
Total Command Numbers: 8
computation of the DFG total time:0.000168s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,1)End of the program infered weight

computation of the DCDG total time:0.000488s

infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(3,k)(5,k)(6,k)(4,k)(1,1)(0,1)(7,k)(2,1)End of the program infered weight
computation of the abscfg total time:0.000160s
computation of the total parsing and graph generation time:0.000755s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0001270771026611328 seconds ---
The Adaptivity From This Graph is:  max(max(max(1 + max(max(1, (2) * (min(min(k, k), k))), (2) * (min(min(k, k), k))), 1 + max(max(1, (2) * (min(min(k, k), k))), (2) * (min(min(k, k), k)))), 1), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.005912065505981445 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : whileVCD.br -----
Total Command Numbers: 5
computation of the DFG total time:0.000146s

infer weight handle while, i:x, initia_gap:*, variance:
Start of the program infered weight(3,(*)/())(4,(*)/())(1,1)(0,1)(2,(*)/())End of the program infered weight

computation of the DCDG total time:0.000369s

infer weight handle while, i:x, initia_gap:*, variance:
Start of the program infered weight(3,(*)/())(4,(*)/())(1,1)(0,1)(2,(*)/())End of the program infered weight
computation of the abscfg total time:0.000158s
computation of the total parsing and graph generation time:0.000617s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.1457672119140625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 6.508827209472656e-05 seconds ---
The Adaptivity From This Graph is:  max(max(1, 1 + max(1, (2) * (min(min((*)/(), (*)/()), (*)/())))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.0059468746185302734 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : xnuSimple.br -----
Total Command Numbers: 9
computation of the DFG total time:0.000226s

infer weight handle while, i:x, initia_gap:N, variance:1
Start of the program infered weight(3,N)(5,N)(6,(N)*(0+2))(4,N)(8,N)(1,1)(0,1)(7,(N)*(0+2))(2,N)End of the program infered weight

computation of the DCDG total time:0.000637s

infer weight handle while, i:x, initia_gap:N, variance:1
Start of the program infered weight(3,N)(5,N)(6,(N)*(0+2))(4,N)(8,N)(1,1)(0,1)(7,(N)*(0+2))(2,N)End of the program infered weight
computation of the abscfg total time:0.000568s
computation of the total parsing and graph generation time:0.001340s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.6226043701171875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0001049041748046875 seconds ---
The Adaptivity From This Graph is:  0
--- ADAPTIVITY ANALYSIS TIME: 0.006519794464111328 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : xnuSimple_foo.br -----
Total Command Numbers: 9
computation of the DFG total time:0.000177s

infer weight handle while, i:x, initia_gap:N, variance:1
Start of the program infered weight(3,N)(5,N)(6,(N)*(N+1))(4,N)(8,N)(1,1)(0,1)(7,(N)*(N+1))(2,N)End of the program infered weight

computation of the DCDG total time:0.000460s

infer weight handle while, i:x, initia_gap:N, variance:1
Start of the program infered weight(3,N)(5,N)(6,(N)*(N+1))(4,N)(8,N)(1,1)(0,1)(7,(N)*(N+1))(2,N)End of the program infered weight
computation of the abscfg total time:0.000301s
computation of the total parsing and graph generation time:0.000950s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 1.6689300537109375e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 9.489059448242188e-05 seconds ---
The Adaptivity From This Graph is:  0
--- ADAPTIVITY ANALYSIS TIME: 0.005639076232910156 seconds ---

 ---- Adaptivity Analysis on Program : big.br -----
Total Command Numbers: 214
computation of the DFG total time:0.012973s

infer weight handle while, i:j, initia_gap:5, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(182,1)(80,k)(188,k)(102,1)(145,k)(15,1)(121,1)(152,1)(205,1)(160,k)(54,k)(140,1)(77,k)(159,k)(3,1)(16,1)(21,5)(131,1)(68,(k)*(N))(85,1)(105,1)(63,k)(176,1)(186,1)(211,1)(17,1)(199,1)(187,k)(142,k)(27,1)(157,k)(212,1)(169,1)(22,5)(65,(k)*(N))(44,1)(5,1)(120,1)(162,1)(33,1)(64,(k)*(N))(175,1)(92,1)(10,1)(153,1)(39,(k)*(k))(126,1)(108,k)(52,k)(30,1)(185,1)(206,1)(14,1)(111,k)(82,1)(89,1)(79,k)(31,1)(12,1)(209,1)(81,k)(128,1)(70,1)(134,1)(24,1)(94,1)(109,k)(167,1)(57,(k)*(N))(156,k)(11,1)(40,(k)*(k))(210,1)(67,(k)*(N))(110,k)(196,1)(6,1)(155,1)(116,1)(38,k)(74,1)(178,1)(75,1)(123,1)(139,1)(147,(k)*(k))(53,k)(73,1)(163,1)(114,(k)*(k))(95,1)(149,1)(42,1)(66,(k)*(N))(18,5)(50,1)(104,1)(4,1)(103,1)(189,k)(180,1)(141,1)(168,1)(8,1)(204,1)(195,(k)*(k))(124,1)(1,1)(36,k)(213,1)(122,1)(181,1)(100,1)(26,1)(135,1)(192,k)(125,1)(143,k)(19,5)(32,1)(172,1)(117,1)(208,1)(60,(k)*(N))(150,1)(161,k)(144,k)(137,1)(194,(k)*(k))(87,1)(84,1)(183,1)(171,1)(34,1)(127,1)(28,1)(148,(k)*(k))(184,1)(72,1)(93,1)(119,1)(0,1)(136,1)(207,1)(7,1)(88,1)(174,1)(179,1)(20,5)(129,1)(166,1)(130,1)(25,1)(49,N)(200,1)(62,(k)*(N))(106,1)(133,1)(56,k)(164,1)(101,1)(69,1)(201,1)(203,1)(96,1)(45,1)(78,k)(118,1)(23,5)(190,k)(76,k)(197,1)(98,1)(202,1)(9,1)(13,1)(51,k)(107,k)(146,(k)*(k))(90,1)(55,k)(132,1)(193,(k)*(k))(59,(k)*(N))(165,1)(154,1)(151,1)(61,(k)*(N))(158,k)(113,(k)*(k))(138,1)(58,(k)*(N))(170,1)(112,k)(48,N)(71,1)(173,1)(191,k)(47,N)(91,1)(97,1)(99,1)(37,k)(41,(k)*(k))(198,1)(115,(k)*(k))(46,N)(177,1)(83,1)(35,k)(29,1)(43,1)(86,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.026362s

infer weight handle while, i:j, initia_gap:5, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
Start of the program infered weight(182,1)(80,k)(188,k)(102,1)(145,k)(15,1)(121,1)(152,1)(205,1)(160,k)(54,k)(140,1)(77,k)(159,k)(3,1)(16,1)(21,5)(131,1)(68,(k)*(N))(85,1)(105,1)(63,k)(176,1)(186,1)(211,1)(17,1)(199,1)(187,k)(142,k)(27,1)(157,k)(212,1)(169,1)(22,5)(65,(k)*(N))(44,1)(5,1)(120,1)(162,1)(33,1)(64,(k)*(N))(175,1)(92,1)(10,1)(153,1)(39,(k)*(k))(126,1)(108,k)(52,k)(30,1)(185,1)(206,1)(14,1)(111,k)(82,1)(89,1)(79,k)(31,1)(12,1)(209,1)(81,k)(128,1)(70,1)(134,1)(24,1)(94,1)(109,k)(167,1)(57,(k)*(N))(156,k)(11,1)(40,(k)*(k))(210,1)(67,(k)*(N))(110,k)(196,1)(6,1)(155,1)(116,1)(38,k)(74,1)(178,1)(75,1)(123,1)(139,1)(147,(k)*(k))(53,k)(73,1)(163,1)(114,(k)*(k))(95,1)(149,1)(42,1)(66,(k)*(N))(18,5)(50,1)(104,1)(4,1)(103,1)(189,k)(180,1)(141,1)(168,1)(8,1)(204,1)(195,(k)*(k))(124,1)(1,1)(36,k)(213,1)(122,1)(181,1)(100,1)(26,1)(135,1)(192,k)(125,1)(143,k)(19,5)(32,1)(172,1)(117,1)(208,1)(60,(k)*(N))(150,1)(161,k)(144,k)(137,1)(194,(k)*(k))(87,1)(84,1)(183,1)(171,1)(34,1)(127,1)(28,1)(148,(k)*(k))(184,1)(72,1)(93,1)(119,1)(0,1)(136,1)(207,1)(7,1)(88,1)(174,1)(179,1)(20,5)(129,1)(166,1)(130,1)(25,1)(49,N)(200,1)(62,(k)*(N))(106,1)(133,1)(56,k)(164,1)(101,1)(69,1)(201,1)(203,1)(96,1)(45,1)(78,k)(118,1)(23,5)(190,k)(76,k)(197,1)(98,1)(202,1)(9,1)(13,1)(51,k)(107,k)(146,(k)*(k))(90,1)(55,k)(132,1)(193,(k)*(k))(59,(k)*(N))(165,1)(154,1)(151,1)(61,(k)*(N))(158,k)(113,(k)*(k))(138,1)(58,(k)*(N))(170,1)(112,k)(48,N)(71,1)(173,1)(191,k)(47,N)(91,1)(97,1)(99,1)(37,k)(41,(k)*(k))(198,1)(115,(k)*(k))(46,N)(177,1)(83,1)(35,k)(29,1)(43,1)(86,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000900s
computation of the total parsing and graph generation time:0.028042s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.003144979476928711 seconds ---
The Adaptivity From This Graph is:  max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(11, max(10, 10 + max(k + max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), max(10 + max(k + max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 11 + max(k + max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 11), 10), 9), 8), 7), max(7, 5 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(6, 5 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(6, 5 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(max(5 + max(1, (2) * (min(min(5, 5), 5))), 2 + max(1, (2) * (min(min(5, 5), 5)))), 1 + max(1, (2) * (min(min(5, 5), 5))))), 5), 4), 4), 3), 2), 1), 4), 3), 2), 1), 1), 1), 1), 1), 1), max(1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 1), 1), 1 + max(1, min(min(k, k), k)) + 1 + 1), max(1 + max(1, min(min(k, k), k)) + 1, 2)), max(1 + max(1, min(min(k, k), k)), 1 + max(1, min(min(k, k), k)))), 1), 2), 1), max(2, 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k))) + 1)), 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))), 1), 1), 1), max(1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 1), 1), 1 + max(1, min(min(k, k), k)) + 1 + 1), max(1 + max(1, min(min(k, k), k)) + 1, 2)), max(1 + max(1, min(min(k, k), k)), 1 + max(1, min(min(k, k), k)))), 1), 2), 1), 1), 2), 1), 1), 2), 1), 1), 4), 3), 2), 1), 4), 4), 3), 3), 2), 1), 3), 2), 3), 2), 1), 1), 1), 1), 1), 5), 4), 3), 2), 1), 2), 1), 4), 3), 2), 1), 4), 3), 3), 2), 1), 1), 1), 4), 3), 2), 1), 4), 4), 3), 3), 2), 1), 3), 3), 3), 2), 3), 2), 1), 1), 1), 1), 1), 4), 3), 3), 2), 1), 2), 1), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.012689828872680664 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : bigLoop.br -----
Total Command Numbers: 13
computation of the DFG total time:0.000203s

infer weight handle while, i:j, initia_gap:5, variance:1
Start of the program infered weight(3,5)(5,5)(10,1)(12,1)(11,1)(6,5)(4,5)(8,5)(1,1)(0,1)(7,5)(9,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.000494s

infer weight handle while, i:j, initia_gap:5, variance:1
Start of the program infered weight(3,5)(5,5)(10,1)(12,1)(11,1)(6,5)(4,5)(8,5)(1,1)(0,1)(7,5)(9,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000127s
computation of the total parsing and graph generation time:0.000755s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.1457672119140625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0001690387725830078 seconds ---
The Adaptivity From This Graph is:  max(max(max(max(max(max(max(max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1) + 1, max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1) + 1) + 1, max(max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1) + 1, max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1) + 1)), max(max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1), max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1) + 1)), max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(2, 1 + max(1, (2) * (min(min(5, 5), 5))) + 1)), 1 + max(1, (2) * (min(min(5, 5), 5)))), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.006021022796630859 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : bigSeq.br -----
Total Command Numbers: 13
computation of the DFG total time:0.000174s

Start of the program infered weight(3,1)(5,1)(10,1)(12,1)(11,1)(6,1)(4,1)(8,1)(1,1)(0,1)(7,1)(9,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.000420s

Start of the program infered weight(3,1)(5,1)(10,1)(12,1)(11,1)(6,1)(4,1)(8,1)(1,1)(0,1)(7,1)(9,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000144s
computation of the total parsing and graph generation time:0.000662s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0001220703125 seconds ---
The Adaptivity From This Graph is:  9
--- ADAPTIVITY ANALYSIS TIME: 0.005836009979248047 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : jumbo.br -----
Total Command Numbers: 502
computation of the DFG total time:0.060869s

infer weight handle while, i:j, initia_gap:5, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(386,1)(182,1)(427,k)(80,(k)*(N))(302,1)(354,1)(188,1)(219,1)(459,1)(488,1)(102,1)(272,1)(145,1)(439,1)(15,1)(221,1)(465,k)(121,1)(425,1)(152,1)(205,1)(385,1)(160,1)(235,(k)*(k))(246,1)(429,k)(437,1)(54,1)(305,1)(140,1)(403,1)(77,(k)*(N))(449,1)(242,1)(159,1)(3,1)(16,1)(21,1)(484,1)(131,k)(231,k)(68,N)(237,1)(85,(k)*(N))(105,1)(247,1)(377,1)(63,1)(279,k)(176,k)(186,1)(357,k)(297,1)(211,1)(433,(k)*(k))(326,1)(392,k)(430,k)(17,1)(391,k)(349,1)(434,(k)*(k))(226,1)(313,(k)*(k))(199,1)(264,k)(295,1)(328,1)(353,1)(499,1)(187,1)(381,1)(404,1)(142,1)(416,1)(262,k)(389,k)(27,1)(157,1)(289,1)(334,1)(212,1)(395,(k)*(k))(460,1)(490,1)(364,1)(241,1)(251,1)(330,1)(432,k)(169,1)(480,k)(359,k)(317,1)(22,1)(215,1)(222,1)(286,1)(355,1)(458,1)(441,1)(482,1)(65,1)(280,k)(44,1)(5,1)(120,1)(365,1)(162,k)(33,5)(64,1)(292,1)(175,1)(276,k)(92,1)(10,1)(224,1)(417,1)(153,1)(39,1)(387,k)(398,1)(498,1)(126,1)(315,(k)*(k))(294,1)(492,1)(108,1)(310,k)(371,1)(52,1)(491,1)(333,1)(250,1)(30,5)(185,1)(206,1)(446,1)(14,1)(111,1)(277,k)(82,(k)*(N))(487,1)(89,1)(291,1)(79,(k)*(N))(217,1)(470,1)(270,1)(31,5)(12,1)(209,1)(366,1)(476,k)(303,1)(81,(k)*(N))(128,k)(356,k)(285,1)(273,1)(70,1)(134,(k)*(k))(399,1)(24,1)(94,1)(109,1)(167,(k)*(k))(407,1)(415,1)(245,1)(57,k)(156,1)(421,1)(257,1)(11,1)(485,1)(420,1)(344,k)(375,1)(390,k)(457,1)(249,1)(331,1)(388,k)(40,1)(210,1)(67,N)(110,1)(339,1)(345,k)(321,1)(196,1)(314,(k)*(k))(6,1)(155,1)(308,k)(483,1)(116,1)(342,k)(348,(k)*(k))(384,1)(38,1)(256,1)(374,1)(495,1)(74,k)(178,k)(75,k)(123,1)(362,1)(139,1)(147,1)(234,(k)*(k))(293,1)(53,1)(240,1)(372,1)(380,1)(218,1)(73,k)(373,1)(163,k)(230,k)(114,1)(368,1)(252,1)(461,1)(283,1)(95,1)(149,1)(42,1)(253,1)(324,1)(229,k)(447,1)(66,N)(363,1)(340,1)(239,1)(318,1)(464,k)(18,1)(50,1)(301,1)(104,1)(496,1)(452,1)(4,1)(258,1)(103,1)(189,1)(453,1)(378,1)(444,1)(477,k)(478,k)(180,k)(275,1)(400,1)(428,k)(481,k)(141,1)(216,1)(414,1)(168,(k)*(k))(489,1)(8,1)(204,1)(335,1)(426,1)(431,k)(475,1)(195,1)(124,1)(370,1)(474,1)(1,1)(332,1)(343,k)(448,1)(419,1)(36,1)(213,1)(323,1)(122,1)(181,k)(306,1)(382,1)(100,k)(402,1)(26,1)(412,1)(296,1)(435,(k)*(k))(225,1)(135,(k)*(k))(307,k)(463,k)(192,1)(259,1)(271,1)(125,1)(320,1)(143,1)(19,1)(32,5)(227,k)(172,1)(228,k)(454,1)(497,1)(269,1)(117,1)(208,1)(60,(k)*(k))(150,1)(244,1)(161,1)(405,1)(144,1)(137,1)(243,1)(194,1)(319,1)(87,(k)*(N))(84,(k)*(N))(183,1)(171,1)(34,1)(274,1)(418,1)(281,k)(127,k)(413,1)(298,1)(28,5)(148,1)(325,1)(379,1)(440,1)(423,1)(184,1)(424,1)(72,k)(261,1)(394,(k)*(k))(93,1)(119,1)(338,1)(233,(k)*(k))(309,k)(0,1)(361,k)(136,1)(254,1)(207,1)(456,1)(7,1)(88,(k)*(N))(501,1)(174,1)(367,1)(179,k)(329,1)(350,1)(20,1)(352,1)(409,1)(129,k)(397,1)(166,(k)*(k))(358,k)(376,1)(130,k)(25,1)(479,k)(49,1)(369,1)(200,1)(436,1)(62,1)(284,1)(106,1)(266,(k)*(k))(133,(k)*(k))(493,1)(56,k)(422,1)(443,1)(164,k)(341,1)(101,k)(69,N)(201,1)(346,(k)*(k))(203,1)(96,k)(288,1)(396,1)(45,1)(78,(k)*(N))(118,1)(236,1)(23,1)(411,1)(337,1)(351,1)(190,1)(393,(k)*(k))(76,k)(197,1)(360,k)(299,1)(98,k)(214,1)(202,1)(9,1)(450,1)(13,1)(220,1)(51,1)(107,1)(312,k)(347,(k)*(k))(146,1)(473,1)(500,1)(316,1)(304,1)(90,1)(322,1)(268,(k)*(k))(55,k)(132,k)(193,1)(59,(k)*(k))(165,k)(445,1)(466,(k)*(k))(223,1)(401,1)(383,1)(410,1)(438,1)(467,(k)*(k))(300,1)(154,1)(151,1)(406,1)(61,(k)*(k))(158,1)(472,1)(113,1)(138,1)(471,1)(278,k)(58,k)(170,1)(112,1)(255,1)(468,(k)*(k))(267,(k)*(k))(48,1)(494,1)(71,k)(462,k)(173,1)(442,1)(260,1)(455,1)(191,1)(311,k)(47,1)(91,1)(282,1)(408,1)(97,k)(99,k)(37,1)(265,k)(248,1)(327,1)(41,1)(486,1)(198,1)(232,k)(115,1)(290,1)(287,1)(469,1)(46,1)(177,k)(83,k)(35,1)(263,k)(336,1)(238,1)(29,5)(451,1)(43,1)(86,(k)*(N))(2,1)End of the program infered weight

computation of the DCDG total time:0.119858s

infer weight handle while, i:j, initia_gap:5, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
Start of the program infered weight(386,1)(182,1)(427,k)(80,(k)*(N))(302,1)(354,1)(188,1)(219,1)(459,1)(488,1)(102,1)(272,1)(145,1)(439,1)(15,1)(221,1)(465,k)(121,1)(425,1)(152,1)(205,1)(385,1)(160,1)(235,(k)*(k))(246,1)(429,k)(437,1)(54,1)(305,1)(140,1)(403,1)(77,(k)*(N))(449,1)(242,1)(159,1)(3,1)(16,1)(21,1)(484,1)(131,k)(231,k)(68,N)(237,1)(85,(k)*(N))(105,1)(247,1)(377,1)(63,1)(279,k)(176,k)(186,1)(357,k)(297,1)(211,1)(433,(k)*(k))(326,1)(392,k)(430,k)(17,1)(391,k)(349,1)(434,(k)*(k))(226,1)(313,(k)*(k))(199,1)(264,k)(295,1)(328,1)(353,1)(499,1)(187,1)(381,1)(404,1)(142,1)(416,1)(262,k)(389,k)(27,1)(157,1)(289,1)(334,1)(212,1)(395,(k)*(k))(460,1)(490,1)(364,1)(241,1)(251,1)(330,1)(432,k)(169,1)(480,k)(359,k)(317,1)(22,1)(215,1)(222,1)(286,1)(355,1)(458,1)(441,1)(482,1)(65,1)(280,k)(44,1)(5,1)(120,1)(365,1)(162,k)(33,5)(64,1)(292,1)(175,1)(276,k)(92,1)(10,1)(224,1)(417,1)(153,1)(39,1)(387,k)(398,1)(498,1)(126,1)(315,(k)*(k))(294,1)(492,1)(108,1)(310,k)(371,1)(52,1)(491,1)(333,1)(250,1)(30,5)(185,1)(206,1)(446,1)(14,1)(111,1)(277,k)(82,(k)*(N))(487,1)(89,1)(291,1)(79,(k)*(N))(217,1)(470,1)(270,1)(31,5)(12,1)(209,1)(366,1)(476,k)(303,1)(81,(k)*(N))(128,k)(356,k)(285,1)(273,1)(70,1)(134,(k)*(k))(399,1)(24,1)(94,1)(109,1)(167,(k)*(k))(407,1)(415,1)(245,1)(57,k)(156,1)(421,1)(257,1)(11,1)(485,1)(420,1)(344,k)(375,1)(390,k)(457,1)(249,1)(331,1)(388,k)(40,1)(210,1)(67,N)(110,1)(339,1)(345,k)(321,1)(196,1)(314,(k)*(k))(6,1)(155,1)(308,k)(483,1)(116,1)(342,k)(348,(k)*(k))(384,1)(38,1)(256,1)(374,1)(495,1)(74,k)(178,k)(75,k)(123,1)(362,1)(139,1)(147,1)(234,(k)*(k))(293,1)(53,1)(240,1)(372,1)(380,1)(218,1)(73,k)(373,1)(163,k)(230,k)(114,1)(368,1)(252,1)(461,1)(283,1)(95,1)(149,1)(42,1)(253,1)(324,1)(229,k)(447,1)(66,N)(363,1)(340,1)(239,1)(318,1)(464,k)(18,1)(50,1)(301,1)(104,1)(496,1)(452,1)(4,1)(258,1)(103,1)(189,1)(453,1)(378,1)(444,1)(477,k)(478,k)(180,k)(275,1)(400,1)(428,k)(481,k)(141,1)(216,1)(414,1)(168,(k)*(k))(489,1)(8,1)(204,1)(335,1)(426,1)(431,k)(475,1)(195,1)(124,1)(370,1)(474,1)(1,1)(332,1)(343,k)(448,1)(419,1)(36,1)(213,1)(323,1)(122,1)(181,k)(306,1)(382,1)(100,k)(402,1)(26,1)(412,1)(296,1)(435,(k)*(k))(225,1)(135,(k)*(k))(307,k)(463,k)(192,1)(259,1)(271,1)(125,1)(320,1)(143,1)(19,1)(32,5)(227,k)(172,1)(228,k)(454,1)(497,1)(269,1)(117,1)(208,1)(60,(k)*(k))(150,1)(244,1)(161,1)(405,1)(144,1)(137,1)(243,1)(194,1)(319,1)(87,(k)*(N))(84,(k)*(N))(183,1)(171,1)(34,1)(274,1)(418,1)(281,k)(127,k)(413,1)(298,1)(28,5)(148,1)(325,1)(379,1)(440,1)(423,1)(184,1)(424,1)(72,k)(261,1)(394,(k)*(k))(93,1)(119,1)(338,1)(233,(k)*(k))(309,k)(0,1)(361,k)(136,1)(254,1)(207,1)(456,1)(7,1)(88,(k)*(N))(501,1)(174,1)(367,1)(179,k)(329,1)(350,1)(20,1)(352,1)(409,1)(129,k)(397,1)(166,(k)*(k))(358,k)(376,1)(130,k)(25,1)(479,k)(49,1)(369,1)(200,1)(436,1)(62,1)(284,1)(106,1)(266,(k)*(k))(133,(k)*(k))(493,1)(56,k)(422,1)(443,1)(164,k)(341,1)(101,k)(69,N)(201,1)(346,(k)*(k))(203,1)(96,k)(288,1)(396,1)(45,1)(78,(k)*(N))(118,1)(236,1)(23,1)(411,1)(337,1)(351,1)(190,1)(393,(k)*(k))(76,k)(197,1)(360,k)(299,1)(98,k)(214,1)(202,1)(9,1)(450,1)(13,1)(220,1)(51,1)(107,1)(312,k)(347,(k)*(k))(146,1)(473,1)(500,1)(316,1)(304,1)(90,1)(322,1)(268,(k)*(k))(55,k)(132,k)(193,1)(59,(k)*(k))(165,k)(445,1)(466,(k)*(k))(223,1)(401,1)(383,1)(410,1)(438,1)(467,(k)*(k))(300,1)(154,1)(151,1)(406,1)(61,(k)*(k))(158,1)(472,1)(113,1)(138,1)(471,1)(278,k)(58,k)(170,1)(112,1)(255,1)(468,(k)*(k))(267,(k)*(k))(48,1)(494,1)(71,k)(462,k)(173,1)(442,1)(260,1)(455,1)(191,1)(311,k)(47,1)(91,1)(282,1)(408,1)(97,k)(99,k)(37,1)(265,k)(248,1)(327,1)(41,1)(486,1)(198,1)(232,k)(115,1)(290,1)(287,1)(469,1)(46,1)(177,k)(83,k)(35,1)(263,k)(336,1)(238,1)(29,5)(451,1)(43,1)(86,(k)*(N))(2,1)End of the program infered weight
computation of the abscfg total time:0.002357s
computation of the total parsing and graph generation time:0.123703s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.0994415283203125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0041239261627197266 seconds ---
The Adaptivity From This Graph is:  max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(9, max(1, max(6, max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k))))) + 1)), max(1, max(6, max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k))))) + 1)), 1), 1), 2), 2), 7), max(6, 6 + max(1, (2) * (min(min(5, 5), 5))))), 4), 5), 4), 2), 3), 5), 4), 3), 1), max(7, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), 9), 8), max(8, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(7, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(7, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(max(6 + max(1, (2) * (min(min(5, 5), 5))), 2 + max(1, (2) * (min(min(5, 5), 5)))), 1 + max(1, (2) * (min(min(5, 5), 5))))), 6), 5), 5), 4), 3), 2), 1), 5), 4), 3), 2), 1), 1), 1), max(max(6, max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k))))) + 1, max(6, max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k))))) + 1)), max(6, max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))))), max(6, max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))))), max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k))))), max(4 + max(k + 1, min(k, k)), 7 + max(k + 1, min(k, k)))), 7), 6), 5), 4), 3), 2), 1), 1), 1), max(2, 1 + max(1, min(min(k, k), k)) + 1)), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1 + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1), max(1 + max(1, min(min(k, k), k)) + 1, 2)), max(1 + max(1, min(min(k, k), k)), 1 + max(1, min(min(k, k), k)))), 1), 2), 1), max(2, 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k))) + 1)), 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))), 1), 1), 1), max(9 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 1), 1), 1), max(1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 1), 1), 1 + max(1, min(min(k, k), k)) + 1 + 1), max(1 + max(1, min(min(k, k), k)) + 1, 2)), max(1 + max(1, min(min(k, k), k)), 1 + max(1, min(min(k, k), k)))), 1), 2), 1), max(2, 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k))) + 1)), 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))), 1), 1), 1), max(1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 1), 1), max(2, 1 + max(1, min(min(k, k), k)) + 1)), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1 + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1 + 1), 1 + max(1, min(min(k, k), k)) + 1 + 1), max(1 + max(1, min(min(k, k), k)) + 1, 2)), max(1 + max(1, min(min(k, k), k)), 1 + max(1, min(min(k, k), k)))), 1), 2), 1), max(2, 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k))) + 1)), 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))), 1), 1), 1), max(10 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 1), 1), 1), 3), 4), max(1, 1 + max(1, min(min(k, k), k)))), max(2, 1 + max(1, min(min(k, k), k)) + 1)), 5), 4), 5), 4), 3), 2), 3), 2), 8), 3), 4), 3), 3), 2), 2), max(1, 1 + max(1, min(min(k, k), k)))), 2), max(max(1, 1 + max(1, min(min(k, k), k))), 2)), 1 + max(1, min(min(k, k), k)) + 1 + 1), max(1 + max(1, min(min(k, k), k)) + 1, 2)), max(1 + max(1, min(min(k, k), k)), 1 + max(1, min(min(k, k), k)))), 1), 2), 1), max(2, 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k))) + 1)), 1 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))), 1), 1), 1), max(1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)), 1 + max(k + max(max(max((k)*(k) + 1, (2) * (min(min(k, (k)*(k)), (k)*(k)))), (3) * (min(min(min(k, (k)*(k)), k), (k)*(k)))), (2) * (min(min(k, (k)*(k)), k))), min(k, k)))), 1), 1), 1 + max(1, min(min(k, k), k)) + 1 + 1), max(1 + max(1, min(min(k, k), k)) + 1, 2)), max(1 + max(1, min(min(k, k), k)), 1 + max(1, min(min(k, k), k)))), 1), 2), 1), 1), 2), 1), 1), 2), 1), 1), 2), 1), 1), 2), 1), 1), 2), 1), 1), 4), 3), 2), 1), 6), 7), 7), 6), 5), 10), 9), 8), 7), 6), 5), 6), 5), 4), 4), 3), 3), 2), 1), 1), 1), 1), 2), 1), 4), 3), 3), 2), 1), 1), 1), 4), 3), 2), 1), 4), 4), 3), 3), 3), 2), 1), 1), 11), 12), 12), 11), 10), 10), 9), 8), 7), 6), 5), 4), 4), 3), 2), 1), 1), 2), 1), 4), 3), 3), 2), 1), 1), 4), 4), 3), 3), 2), 1), 3), 2), 3), 2), 5), 4), 4), 3), 2), 1), 1), 1), 1), 1), 2), 1), 6), 5), 5), 4), 3), 4), 3), 2), 1), 1), 1), 4), 3), 2), 1), 4), 5), 4), 3), 3), 2), 1), 5), 4), 5), 4), 3), 2), 6), 10), 4), 3), 2), 7), 10), 9), 9), 8), 7), 6), 5), 4), 3), 3), 3), 2), 3), 2), 1), 1), 1), 1), 4), 3), 3), 2), 1), 2), 1), 1), 2), 1), 4), 3), 3), 2), 1), 1), 4), 4), 3), 3), 2), 1), 2), 1), 1), 1), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.016199827194213867 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : jumboS.br -----
Total Command Numbers: 71
computation of the DFG total time:0.003133s

infer weight handle while, i:j, initia_gap:5, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:N, variance:1
Start of the program infered weight(15,1)(54,1)(3,1)(16,1)(21,1)(68,N)(63,1)(17,1)(27,1)(22,1)(65,1)(44,1)(5,1)(33,5)(64,1)(10,1)(39,1)(52,1)(30,5)(14,1)(31,5)(12,1)(70,1)(24,1)(57,k)(11,1)(40,1)(67,N)(6,1)(38,1)(53,1)(42,1)(66,N)(18,1)(50,1)(4,1)(8,1)(1,1)(36,1)(26,1)(19,1)(32,5)(60,(k)*(k))(34,1)(28,5)(0,1)(7,1)(20,1)(25,1)(49,1)(62,1)(56,k)(69,N)(45,1)(23,1)(9,1)(13,1)(51,1)(55,k)(59,(k)*(k))(61,(k)*(k))(58,k)(48,1)(47,1)(37,1)(41,1)(46,1)(35,1)(29,5)(43,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.004689s

infer weight handle while, i:j, initia_gap:5, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:N, variance:1
Start of the program infered weight(15,1)(54,1)(3,1)(16,1)(21,1)(68,N)(63,1)(17,1)(27,1)(22,1)(65,1)(44,1)(5,1)(33,5)(64,1)(10,1)(39,1)(52,1)(30,5)(14,1)(31,5)(12,1)(70,1)(24,1)(57,k)(11,1)(40,1)(67,N)(6,1)(38,1)(53,1)(42,1)(66,N)(18,1)(50,1)(4,1)(8,1)(1,1)(36,1)(26,1)(19,1)(32,5)(60,(k)*(k))(34,1)(28,5)(0,1)(7,1)(20,1)(25,1)(49,1)(62,1)(56,k)(69,N)(45,1)(23,1)(9,1)(13,1)(51,1)(55,k)(59,(k)*(k))(61,(k)*(k))(58,k)(48,1)(47,1)(37,1)(41,1)(46,1)(35,1)(29,5)(43,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.000297s
computation of the total parsing and graph generation time:0.005302s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 2.86102294921875e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0007638931274414062 seconds ---
The Adaptivity From This Graph is:  max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(max(9, max(6, 6 + max(1, (2) * (min(min(5, 5), 5))))), 4), 5), 4), 2), 1), 5), 2), 3), 1), max(7, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), 9), 8), max(8, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(7, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(7, 6 + max(1, (2) * (min(min(5, 5), 5))) + 1)), max(max(6 + max(1, (2) * (min(min(5, 5), 5))), 2 + max(1, (2) * (min(min(5, 5), 5)))), 1 + max(1, (2) * (min(min(5, 5), 5))))), 6), 5), 5), 4), 3), 2), 1), 5), 4), 3), 2), 1), 1), 1), max(6, max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k)))))), max(4 + max(k + 1, min(k, k)) + max((k)*(k) + 1, min((k)*(k), (k)*(k))), 6 + max((k)*(k) + 1, min((k)*(k), (k)*(k))))), max(4 + max(k + 1, min(k, k)), 7 + max(k + 1, min(k, k)))), 7), 6), 5), 4), 3), 2), 1), 1)
--- ADAPTIVITY ANALYSIS TIME: 0.007843017578125 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : mRComplete.br -----
Total Command Numbers: 27
computation of the DFG total time:0.002104s

infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
Start of the program infered weight(15,(k)*(N))(3,1)(16,(k)*(N))(21,k)(17,(k)*(N))(22,(k)*(N))(5,N)(10,k)(14,k)(12,k)(24,(k)*(N))(11,k)(6,N)(18,(k)*(N))(4,N)(8,1)(1,1)(26,(k)*(N))(19,(k)*(N))(0,1)(7,N)(20,(k)*(N))(25,(k)*(N))(23,(k)*(N))(9,k)(13,k)(2,1)End of the program infered weight

computation of the DCDG total time:0.003531s

infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
Start of the program infered weight(15,(k)*(N))(3,1)(16,(k)*(N))(21,k)(17,(k)*(N))(22,(k)*(N))(5,N)(10,k)(14,k)(12,k)(24,(k)*(N))(11,k)(6,N)(18,(k)*(N))(4,N)(8,1)(1,1)(26,(k)*(N))(19,(k)*(N))(0,1)(7,N)(20,(k)*(N))(25,(k)*(N))(23,(k)*(N))(9,k)(13,k)(2,1)End of the program infered weight
computation of the abscfg total time:0.000159s
computation of the total parsing and graph generation time:0.003928s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 3.814697265625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00031304359436035156 seconds ---
The Adaptivity From This Graph is:  1
--- ADAPTIVITY ANALYSIS TIME: 0.007018089294433594 seconds ---
Done: 61% (41/67, 26 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : mRCompose.br -----
Total Command Numbers: 46
computation of the DFG total time:0.002902s

infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
Start of the program infered weight(15,(k)*(N))(3,1)(16,(k)*(N))(21,k)(17,(k)*(N))(27,1)(22,(k)*(N))(44,(k)*(N))(5,N)(33,k)(10,k)(39,(k)*(N))(30,k)(14,k)(31,k)(12,k)(24,(k)*(N))(11,k)(40,k)(6,N)(38,(k)*(N))(42,(k)*(N))(18,(k)*(N))(4,N)(8,1)(1,1)(36,(k)*(N))(26,(k)*(N))(19,(k)*(N))(32,k)(34,(k)*(N))(28,k)(0,1)(7,N)(20,(k)*(N))(25,(k)*(N))(45,(k)*(N))(23,(k)*(N))(9,k)(13,k)(37,(k)*(N))(41,(k)*(N))(35,(k)*(N))(29,k)(43,(k)*(N))(2,1)End of the program infered weight

computation of the DCDG total time:0.004526s

infer weight handle while, i:j, initia_gap:N, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
infer weight handle while, i:w, initia_gap:k, variance:1
Start of the program infered weight(15,(k)*(N))(3,1)(16,(k)*(N))(21,k)(17,(k)*(N))(27,1)(22,(k)*(N))(44,(k)*(N))(5,N)(33,k)(10,k)(39,(k)*(N))(30,k)(14,k)(31,k)(12,k)(24,(k)*(N))(11,k)(40,k)(6,N)(38,(k)*(N))(42,(k)*(N))(18,(k)*(N))(4,N)(8,1)(1,1)(36,(k)*(N))(26,(k)*(N))(19,(k)*(N))(32,k)(34,(k)*(N))(28,k)(0,1)(7,N)(20,(k)*(N))(25,(k)*(N))(45,(k)*(N))(23,(k)*(N))(9,k)(13,k)(37,(k)*(N))(41,(k)*(N))(35,(k)*(N))(29,k)(43,(k)*(N))(2,1)End of the program infered weight
computation of the abscfg total time:0.000253s
computation of the total parsing and graph generation time:0.005130s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 5.0067901611328125e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0008630752563476562 seconds ---
The Adaptivity From This Graph is:  1
--- ADAPTIVITY ANALYSIS TIME: 0.008268117904663086 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : seqCompose.br -----
Total Command Numbers: 502
computation of the DFG total time:0.036469s

Start of the program infered weight(386,1)(182,1)(427,1)(80,1)(302,1)(354,1)(188,1)(219,1)(459,1)(488,1)(102,1)(272,1)(145,1)(439,1)(15,1)(221,1)(465,1)(121,1)(425,1)(152,1)(205,1)(385,1)(160,1)(235,1)(246,1)(429,1)(437,1)(54,1)(305,1)(140,1)(403,1)(77,1)(449,1)(242,1)(159,1)(3,1)(16,1)(21,1)(484,1)(131,1)(231,1)(68,1)(237,1)(85,1)(105,1)(247,1)(377,1)(63,1)(279,1)(176,1)(186,1)(357,1)(297,1)(211,1)(433,1)(326,1)(392,1)(430,1)(17,1)(391,1)(349,1)(434,1)(226,1)(313,1)(199,1)(264,1)(295,1)(328,1)(353,1)(499,1)(187,1)(381,1)(404,1)(142,1)(416,1)(262,1)(389,1)(27,1)(157,1)(289,1)(334,1)(212,1)(395,1)(460,1)(490,1)(364,1)(241,1)(251,1)(330,1)(432,1)(169,1)(480,1)(359,1)(317,1)(22,1)(215,1)(222,1)(286,1)(355,1)(458,1)(441,1)(482,1)(65,1)(280,1)(44,1)(5,1)(120,1)(365,1)(162,1)(33,1)(64,1)(292,1)(175,1)(276,1)(92,1)(10,1)(224,1)(417,1)(153,1)(39,1)(387,1)(398,1)(498,1)(126,1)(315,1)(294,1)(492,1)(108,1)(310,1)(371,1)(52,1)(491,1)(333,1)(250,1)(30,1)(185,1)(206,1)(446,1)(14,1)(111,1)(277,1)(82,1)(487,1)(89,1)(291,1)(79,1)(217,1)(470,1)(270,1)(31,1)(12,1)(209,1)(366,1)(476,1)(303,1)(81,1)(128,1)(356,1)(285,1)(273,1)(70,1)(134,1)(399,1)(24,1)(94,1)(109,1)(167,1)(407,1)(415,1)(245,1)(57,1)(156,1)(421,1)(257,1)(11,1)(485,1)(420,1)(344,1)(375,1)(390,1)(457,1)(249,1)(331,1)(388,1)(40,1)(210,1)(67,1)(110,1)(339,1)(345,1)(321,1)(196,1)(314,1)(6,1)(155,1)(308,1)(483,1)(116,1)(342,1)(348,1)(384,1)(38,1)(256,1)(374,1)(495,1)(74,1)(178,1)(75,1)(123,1)(362,1)(139,1)(147,1)(234,1)(293,1)(53,1)(240,1)(372,1)(380,1)(218,1)(73,1)(373,1)(163,1)(230,1)(114,1)(368,1)(252,1)(461,1)(283,1)(95,1)(149,1)(42,1)(253,1)(324,1)(229,1)(447,1)(66,1)(363,1)(340,1)(239,1)(318,1)(464,1)(18,1)(50,1)(301,1)(104,1)(496,1)(452,1)(4,1)(258,1)(103,1)(189,1)(453,1)(378,1)(444,1)(477,1)(478,1)(180,1)(275,1)(400,1)(428,1)(481,1)(141,1)(216,1)(414,1)(168,1)(489,1)(8,1)(204,1)(335,1)(426,1)(431,1)(475,1)(195,1)(124,1)(370,1)(474,1)(1,1)(332,1)(343,1)(448,1)(419,1)(36,1)(213,1)(323,1)(122,1)(181,1)(306,1)(382,1)(100,1)(402,1)(26,1)(412,1)(296,1)(435,1)(225,1)(135,1)(307,1)(463,1)(192,1)(259,1)(271,1)(125,1)(320,1)(143,1)(19,1)(32,1)(227,1)(172,1)(228,1)(454,1)(497,1)(269,1)(117,1)(208,1)(60,1)(150,1)(244,1)(161,1)(405,1)(144,1)(137,1)(243,1)(194,1)(319,1)(87,1)(84,1)(183,1)(171,1)(34,1)(274,1)(418,1)(281,1)(127,1)(413,1)(298,1)(28,1)(148,1)(325,1)(379,1)(440,1)(423,1)(184,1)(424,1)(72,1)(261,1)(394,1)(93,1)(119,1)(338,1)(233,1)(309,1)(0,1)(361,1)(136,1)(254,1)(207,1)(456,1)(7,1)(88,1)(501,1)(174,1)(367,1)(179,1)(329,1)(350,1)(20,1)(352,1)(409,1)(129,1)(397,1)(166,1)(358,1)(376,1)(130,1)(25,1)(479,1)(49,1)(369,1)(200,1)(436,1)(62,1)(284,1)(106,1)(266,1)(133,1)(493,1)(56,1)(422,1)(443,1)(164,1)(341,1)(101,1)(69,1)(201,1)(346,1)(203,1)(96,1)(288,1)(396,1)(45,1)(78,1)(118,1)(236,1)(23,1)(411,1)(337,1)(351,1)(190,1)(393,1)(76,1)(197,1)(360,1)(299,1)(98,1)(214,1)(202,1)(9,1)(450,1)(13,1)(220,1)(51,1)(107,1)(312,1)(347,1)(146,1)(473,1)(500,1)(316,1)(304,1)(90,1)(322,1)(268,1)(55,1)(132,1)(193,1)(59,1)(165,1)(445,1)(466,1)(223,1)(401,1)(383,1)(410,1)(438,1)(467,1)(300,1)(154,1)(151,1)(406,1)(61,1)(158,1)(472,1)(113,1)(138,1)(471,1)(278,1)(58,1)(170,1)(112,1)(255,1)(468,1)(267,1)(48,1)(494,1)(71,1)(462,1)(173,1)(442,1)(260,1)(455,1)(191,1)(311,1)(47,1)(91,1)(282,1)(408,1)(97,1)(99,1)(37,1)(265,1)(248,1)(327,1)(41,1)(486,1)(198,1)(232,1)(115,1)(290,1)(287,1)(469,1)(46,1)(177,1)(83,1)(35,1)(263,1)(336,1)(238,1)(29,1)(451,1)(43,1)(86,1)(2,1)End of the program infered weight

computation of the DCDG total time:0.066379s

Start of the program infered weight(386,1)(182,1)(427,1)(80,1)(302,1)(354,1)(188,1)(219,1)(459,1)(488,1)(102,1)(272,1)(145,1)(439,1)(15,1)(221,1)(465,1)(121,1)(425,1)(152,1)(205,1)(385,1)(160,1)(235,1)(246,1)(429,1)(437,1)(54,1)(305,1)(140,1)(403,1)(77,1)(449,1)(242,1)(159,1)(3,1)(16,1)(21,1)(484,1)(131,1)(231,1)(68,1)(237,1)(85,1)(105,1)(247,1)(377,1)(63,1)(279,1)(176,1)(186,1)(357,1)(297,1)(211,1)(433,1)(326,1)(392,1)(430,1)(17,1)(391,1)(349,1)(434,1)(226,1)(313,1)(199,1)(264,1)(295,1)(328,1)(353,1)(499,1)(187,1)(381,1)(404,1)(142,1)(416,1)(262,1)(389,1)(27,1)(157,1)(289,1)(334,1)(212,1)(395,1)(460,1)(490,1)(364,1)(241,1)(251,1)(330,1)(432,1)(169,1)(480,1)(359,1)(317,1)(22,1)(215,1)(222,1)(286,1)(355,1)(458,1)(441,1)(482,1)(65,1)(280,1)(44,1)(5,1)(120,1)(365,1)(162,1)(33,1)(64,1)(292,1)(175,1)(276,1)(92,1)(10,1)(224,1)(417,1)(153,1)(39,1)(387,1)(398,1)(498,1)(126,1)(315,1)(294,1)(492,1)(108,1)(310,1)(371,1)(52,1)(491,1)(333,1)(250,1)(30,1)(185,1)(206,1)(446,1)(14,1)(111,1)(277,1)(82,1)(487,1)(89,1)(291,1)(79,1)(217,1)(470,1)(270,1)(31,1)(12,1)(209,1)(366,1)(476,1)(303,1)(81,1)(128,1)(356,1)(285,1)(273,1)(70,1)(134,1)(399,1)(24,1)(94,1)(109,1)(167,1)(407,1)(415,1)(245,1)(57,1)(156,1)(421,1)(257,1)(11,1)(485,1)(420,1)(344,1)(375,1)(390,1)(457,1)(249,1)(331,1)(388,1)(40,1)(210,1)(67,1)(110,1)(339,1)(345,1)(321,1)(196,1)(314,1)(6,1)(155,1)(308,1)(483,1)(116,1)(342,1)(348,1)(384,1)(38,1)(256,1)(374,1)(495,1)(74,1)(178,1)(75,1)(123,1)(362,1)(139,1)(147,1)(234,1)(293,1)(53,1)(240,1)(372,1)(380,1)(218,1)(73,1)(373,1)(163,1)(230,1)(114,1)(368,1)(252,1)(461,1)(283,1)(95,1)(149,1)(42,1)(253,1)(324,1)(229,1)(447,1)(66,1)(363,1)(340,1)(239,1)(318,1)(464,1)(18,1)(50,1)(301,1)(104,1)(496,1)(452,1)(4,1)(258,1)(103,1)(189,1)(453,1)(378,1)(444,1)(477,1)(478,1)(180,1)(275,1)(400,1)(428,1)(481,1)(141,1)(216,1)(414,1)(168,1)(489,1)(8,1)(204,1)(335,1)(426,1)(431,1)(475,1)(195,1)(124,1)(370,1)(474,1)(1,1)(332,1)(343,1)(448,1)(419,1)(36,1)(213,1)(323,1)(122,1)(181,1)(306,1)(382,1)(100,1)(402,1)(26,1)(412,1)(296,1)(435,1)(225,1)(135,1)(307,1)(463,1)(192,1)(259,1)(271,1)(125,1)(320,1)(143,1)(19,1)(32,1)(227,1)(172,1)(228,1)(454,1)(497,1)(269,1)(117,1)(208,1)(60,1)(150,1)(244,1)(161,1)(405,1)(144,1)(137,1)(243,1)(194,1)(319,1)(87,1)(84,1)(183,1)(171,1)(34,1)(274,1)(418,1)(281,1)(127,1)(413,1)(298,1)(28,1)(148,1)(325,1)(379,1)(440,1)(423,1)(184,1)(424,1)(72,1)(261,1)(394,1)(93,1)(119,1)(338,1)(233,1)(309,1)(0,1)(361,1)(136,1)(254,1)(207,1)(456,1)(7,1)(88,1)(501,1)(174,1)(367,1)(179,1)(329,1)(350,1)(20,1)(352,1)(409,1)(129,1)(397,1)(166,1)(358,1)(376,1)(130,1)(25,1)(479,1)(49,1)(369,1)(200,1)(436,1)(62,1)(284,1)(106,1)(266,1)(133,1)(493,1)(56,1)(422,1)(443,1)(164,1)(341,1)(101,1)(69,1)(201,1)(346,1)(203,1)(96,1)(288,1)(396,1)(45,1)(78,1)(118,1)(236,1)(23,1)(411,1)(337,1)(351,1)(190,1)(393,1)(76,1)(197,1)(360,1)(299,1)(98,1)(214,1)(202,1)(9,1)(450,1)(13,1)(220,1)(51,1)(107,1)(312,1)(347,1)(146,1)(473,1)(500,1)(316,1)(304,1)(90,1)(322,1)(268,1)(55,1)(132,1)(193,1)(59,1)(165,1)(445,1)(466,1)(223,1)(401,1)(383,1)(410,1)(438,1)(467,1)(300,1)(154,1)(151,1)(406,1)(61,1)(158,1)(472,1)(113,1)(138,1)(471,1)(278,1)(58,1)(170,1)(112,1)(255,1)(468,1)(267,1)(48,1)(494,1)(71,1)(462,1)(173,1)(442,1)(260,1)(455,1)(191,1)(311,1)(47,1)(91,1)(282,1)(408,1)(97,1)(99,1)(37,1)(265,1)(248,1)(327,1)(41,1)(486,1)(198,1)(232,1)(115,1)(290,1)(287,1)(469,1)(46,1)(177,1)(83,1)(35,1)(263,1)(336,1)(238,1)(29,1)(451,1)(43,1)(86,1)(2,1)End of the program infered weight
computation of the abscfg total time:0.001445s
computation of the total parsing and graph generation time:0.068394s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 1.6689300537109375e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.0045413970947265625 seconds ---
The Adaptivity From This Graph is:  13
--- ADAPTIVITY ANALYSIS TIME: 0.015778779983520508 seconds ---
Done: 73% (38/52, 14 left) (jobs: 0)
 ---- Adaptivity Analysis on Program : tRCompose.br -----
Total Command Numbers: 42
computation of the DFG total time:0.001575s

infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k-1, variance:1
Start of the program infered weight(15,(k)*(k))(3,k)(16,(k)*(k))(21,k)(17,(k)*(k))(27,k)(22,k)(5,k)(33,k-1)(10,k)(39,(k-1)*(k))(30,k)(14,k)(31,k-1)(12,k)(24,k)(11,k)(40,(k-1)*(k))(6,1)(38,(k-1)*(k))(18,(k)*(k))(4,k)(8,1)(1,1)(36,k-1)(26,1)(19,1)(32,k-1)(34,k-1)(28,k)(0,1)(7,1)(20,1)(25,1)(23,k)(9,k)(13,k)(37,(k-1)*(k))(41,1)(35,k-1)(29,k)(2,k)End of the program infered weight

computation of the DCDG total time:0.002814s

infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:i, initia_gap:k, variance:1
infer weight handle while, i:j, initia_gap:k-1, variance:1
Start of the program infered weight(15,(k)*(k))(3,k)(16,(k)*(k))(21,k)(17,(k)*(k))(27,k)(22,k)(5,k)(33,k-1)(10,k)(39,(k-1)*(k))(30,k)(14,k)(31,k-1)(12,k)(24,k)(11,k)(40,(k-1)*(k))(6,1)(38,(k-1)*(k))(18,(k)*(k))(4,k)(8,1)(1,1)(36,k-1)(26,1)(19,1)(32,k-1)(34,k-1)(28,k)(0,1)(7,1)(20,1)(25,1)(23,k)(9,k)(13,k)(37,(k-1)*(k))(41,1)(35,k-1)(29,k)(2,k)End of the program infered weight
computation of the abscfg total time:0.000171s
computation of the total parsing and graph generation time:0.003231s
--- ALTERNATIVE-C : NO CONTROL DEPENDENCY ANALYSIS ---
--- REACHABILITY BOUND COMPUTATION TIME: 4.0531158447265625e-06 seconds ---
--- ADAPTIVITY COMPUTATION TIME: 0.00044798851013183594 seconds ---
The Adaptivity From This Graph is:  2
--- ADAPTIVITY ANALYSIS TIME: 0.00670313835144043 seconds ---
