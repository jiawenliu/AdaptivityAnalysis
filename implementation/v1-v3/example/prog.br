let get : depth 0 = {contra : int list -> int -> int }

in

fix round (j: int). lambda db:int list list. lambda k : int.
	if((j < k), 
	let a: depth 1 = mech( { lambda x: int list. (get x j) * (get x k) : int list -> int } ) 
	in
	(a,j)::nil
	, nil)


|- int -> int list list -> int -> (real X int) list